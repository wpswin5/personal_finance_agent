{"version":3,"file":"static/js/996.e9e80081.chunk.js","mappings":"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","sources":["components/Charts.js","pages/Dashboard.js"],"sourcesContent":["import React from 'react';\n\n// Small, dependency-free SVG chart components. These are intentionally simple\n// and accept `data` and `labels` props so they can be swapped out later for\n// a library (Recharts / Chart.js) without changing callers.\n\nexport const LineChart = ({ data = [], width = 520, height = 160, stroke = '#0ea5ff', fill = 'rgba(14,165,255,0.08)' }) => {\n  if (!data || data.length === 0) {\n    return <div style={{width, height, display: 'flex', alignItems: 'center', justifyContent: 'center', color:'#9aa4b2'}}>No data</div>;\n  }\n\n  const max = Math.max(...data);\n  const min = Math.min(...data);\n  const len = data.length;\n  const padding = 8;\n  const scaleX = (i) => padding + (i / (len - 1)) * (width - padding * 2);\n  const scaleY = (v) => {\n    if (max === min) return height / 2;\n    return padding + (1 - (v - min) / (max - min)) * (height - padding * 2);\n  };\n\n  const points = data.map((v, i) => `${scaleX(i)},${scaleY(v)}`).join(' ');\n\n  // area path for smooth-ish filled background (using polyline approximation)\n  const areaPath = `M ${padding},${height - padding} L ${points.split(' ').map(p => p).join(' L ')} L ${width - padding},${height - padding} Z`;\n\n  return (\n    <svg width={width} height={height} viewBox={`0 0 ${width} ${height}`} preserveAspectRatio=\"none\" role=\"img\" aria-label=\"line chart\">\n      <path d={areaPath} fill={fill} stroke=\"none\" />\n      <polyline points={points} fill=\"none\" stroke={stroke} strokeWidth={2} strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n      {data.map((v, i) => (\n        <circle key={i} cx={scaleX(i)} cy={scaleY(v)} r={2.2} fill={stroke} />\n      ))}\n    </svg>\n  );\n};\n\nexport const MiniSparkline = ({ data = [], width = 140, height = 48, stroke = '#06b6d4' }) => {\n  if (!data || data.length === 0) return null;\n  const max = Math.max(...data);\n  const min = Math.min(...data);\n  const len = data.length;\n  const padding = 4;\n  const scaleX = (i) => padding + (i / (len - 1)) * (width - padding * 2);\n  const scaleY = (v) => (max === min ? height / 2 : padding + (1 - (v - min) / (max - min)) * (height - padding * 2));\n  const points = data.map((v, i) => `${scaleX(i)},${scaleY(v)}`).join(' ');\n\n  return (\n    <svg width={width} height={height} viewBox={`0 0 ${width} ${height}`} preserveAspectRatio=\"none\" aria-hidden>\n      <polyline points={points} fill=\"none\" stroke={stroke} strokeWidth={1.8} strokeLinecap=\"round\" strokeLinejoin=\"round\" opacity={0.95} />\n    </svg>\n  );\n};\n\nexport default LineChart;\n","import React, { useEffect, useState } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { User, CreditCard, Home, MessageCircle } from 'lucide-react';\nimport LineChart, { MiniSparkline } from '../components/Charts';\nimport './Dashboard.css';\n\nconst Dashboard = () => {\n  const { getAccessTokenSilently, user, isAuthenticated } = useAuth0();\n  const [me, setMe] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchMe = async () => {\n      if (isAuthenticated) {\n        try {\n          const token = await getAccessTokenSilently({\n            audience: \"https://fastapiexample.com\",\n            scope: \"test:read\"\n          });\n          const response = await axios.get(\"http://localhost:8000/user/me\", {\n            headers: { Authorization: `Bearer ${token}` },\n          });\n          setMe(response.data);\n        } catch (err) {\n          console.error(err);\n        } finally {\n          setLoading(false);\n        }\n      }\n    };\n    fetchMe();\n  }, [isAuthenticated, getAccessTokenSilently]);\n\n  if (loading) {\n    return (\n      <div className=\"dashboard-container\">\n        <div className=\"loading-spinner\">Loading...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"dashboard-container\">\n      <div className=\"dashboard-header\">\n        <h1>Welcome back, {user?.name || user?.email}!</h1>\n        <p>Here's your financial overview</p>\n      </div>\n\n      <div className=\"dashboard-stats\">\n        <div className=\"stat-card\">\n          <h4>Net worth</h4>\n          <div className=\"chart-placeholder\">\n            <LineChart data={[1200, 1400, 1500, 1300, 1550, 1700, 1600]} width={520} height={140} />\n          </div>\n        </div>\n\n        <div className=\"stat-card small\">\n          <h4>Spending (30d)</h4>\n          <div className=\"chart-placeholder small\">\n            <MiniSparkline data={[200, 150, 180, 220, 140, 190, 210, 240, 200, 170, 190]} />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"dashboard-grid\">\n        <Link to=\"/accounts\" className=\"dashboard-card card-link-wrapper\">\n          <div className=\"card-icon\"><CreditCard size={36} /></div>\n          <div className=\"card-content\">\n            <h3>Bank Accounts</h3>\n            <p>Connect and manage your bank accounts</p>\n            <span className=\"card-link\">View Accounts â†’</span>\n          </div>\n        </Link>\n\n        <Link to=\"/profile\" className=\"dashboard-card card-link-wrapper\">\n          <div className=\"card-icon\"><User size={36} /></div>\n          <div className=\"card-content\">\n            <h3>Profile</h3>\n            <p>View and manage your user profile</p>\n            <span className=\"card-link\">View Profile â†’</span>\n          </div>\n        </Link>\n\n        <Link to=\"/households\" className=\"dashboard-card card-link-wrapper\">\n          <div className=\"card-icon\"><Home size={36} /></div>\n          <div className=\"card-content\">\n            <h3>Households</h3>\n            <p>Manage household-linked accounts and aggregated balances</p>\n            <span className=\"card-link\">View Households â†’</span>\n          </div>\n        </Link>\n\n        <Link to=\"/agent\" className=\"dashboard-card card-link-wrapper\">\n          <div className=\"card-icon\"><MessageCircle size={36} /></div>\n          <div className=\"card-content\">\n            <h3>AI Assistant</h3>\n            <p>Chat with your financial advisor</p>\n            <span className=\"card-link\">Start Chat â†’</span>\n          </div>\n        </Link>\n      </div>\n\n      {/* Account information block removed (redundant) */}\n    </div>\n  );\n};\n\nexport default Dashboard;"],"names":["MiniSparkline","_ref2","data","width","height","stroke","length","max","Math","min","len","points","map","v","i","concat","padding","scaleX","scaleY","join","_jsx","viewBox","preserveAspectRatio","children","fill","strokeWidth","strokeLinecap","strokeLinejoin","opacity","_ref","style","display","alignItems","justifyContent","color","areaPath","split","p","_jsxs","role","d","cx","cy","r","Dashboard","getAccessTokenSilently","user","isAuthenticated","useAuth0","me","setMe","useState","loading","setLoading","useEffect","async","token","audience","scope","response","axios","get","headers","Authorization","err","console","error","fetchMe","className","name","email","LineChart","Link","to","CreditCard","size","User","Home","MessageCircle"],"sourceRoot":""}